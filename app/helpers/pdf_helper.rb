require 'prawn/qrcode'

module PdfHelper
  include Prawn::Measurements

  class PdfSheets
    attr_reader :pdf, :size, :margin
    delegate :render, to: :pdf

    # These values happen to work best with my Brother thermal label printer
    # in the resulting PDF that's generated by Prawn. That's it.
    WIDTH = 175
    HEIGHT = 62
    MARGIN = 5
    COLUMNS = 6
    ROWS = 6
    BASE_FONT_SIZE = 8
    LARGE_FONT_SIZE = 24
    FONT = "Inter"

    def initialize(width: WIDTH, height: HEIGHT, margin: MARGIN, columns: COLUMNS, rows: ROWS, gutter: nil, **kwargs)
      @pdf = Prawn::Document::new skip_page_creation: true, **kwargs
      @size = [width, height]
      @margin = margin
      gutter ||= margin
      pdf.define_grid(columns: columns, rows: rows, gutter: gutter)
      initialize_fonts
    end

    def add(&block)
      pdf.start_new_page size: size, margin: margin
      pdf.font FONT do
        block.call pdf
      end
    end

    def add_text(lines=[], size: BASE_FONT_SIZE, align: :left, overflow: :shrink_to_fit, valign: :bottom, style: :normal)
      lines = Array(lines)
      yield lines if block_given?
      pdf.text_box lines.join("\n"),
        size: size,
        align: align,
        overflow: overflow,
        valign: valign,
        style: style
    end

    def add_large_text(lines, size: LARGE_FONT_SIZE, **kwargs)
      add_text lines, size: size, style: :bold, **kwargs
    end

    def grid(top:, left:, bottom:, right: , &block)
      pdf.grid([top, left], [bottom, right]).bounding_box(&block)
    end

    def grid_box(top:, left:, width:, height:, &block)
      bottom = top + height - 1
      right = left + width - 1
      pdf.grid([top, left], [bottom, right]).bounding_box do
        block.call pdf
      end
    end

    def qr_code(url)
      pdf.print_qr_code url,
        extent: pdf.bounds.width,
        margin: 0,
        stroke: true
    end

    private
      def initialize_fonts
        pdf.font_families.update(
          "Inter" => {
            bold:         Rails.root.join("app/assets/fonts/inter/ttf/Inter-Bold.ttf"),
            italic:       Rails.root.join("app/assets/fonts/inter/ttf/Inter-Italic.ttf"),
            bold_italic:  Rails.root.join("app/assets/fonts/inter/ttf/Inter-BoldItalic.ttf"),
            normal:       Rails.root.join("app/assets/fonts/inter/ttf/Inter-Regular.ttf")
          }
        )
      end
  end

  def pdf_sheets(**kwargs, &block)
    sheets = PdfSheets.new(**kwargs)
    block.call sheets, sheets.pdf
    sheets.render
  end
end
